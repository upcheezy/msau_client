{"version":3,"sources":["config.js","map/map.jsx","infoPanel/info_panel.jsx","modal/modal.jsx","confirmation_modal/confirmation_modal.jsx","main/main.jsx","login/Login.jsx","App.js","index.js","images/SC811.png"],"names":["process","MapboxDraw","require","MapboxGeocoder","Parse","map","state","codeGeom","hasZoomed","updateCodeGeom","props","selectedData","window","getLayer","getSource","setData","addSource","type","data","generateId","addLayer","id","source","paint","hasZoomedProp","hasZoomedTrue","bounds","turf","fitBounds","padding","buildMap","mapboxgl","accessToken","config","Map","container","style","center","zoom","address","countries","bbox","on","result","addControl","draw","displayControlsDefault","controls","polygon","line_string","point","trash","ev","drawnGeom","features","geometry","selectedDrawItemHandler","delete","noCodeGeom","deleteDrawData","this","zoomGeom","numberClickZoom","hasZoomedNumberClickTrue","parseGeom","parseBounds","Component","getDerivedStateFromProps","geom","info_panel","showInfoPanel","codes","selectedCode","confirmation","confirmationError","buffer","spinner","togglePanel","setState","codeHandler","code","handleGeomZoom","zoomToGeomNumberClick","hasZoomedNumberClick","handleConfirmation","target","checked","handleConfirmationButtonClick","drawGeom","length","handleSpinner","drawObj","forEach","index","converter","wktConverter","string","fetch","method","headers","body","JSON","stringify","then","res","ok","Error","status","location","reload","catch","error","alert","handleBuffer","value","className","x","onClick","filter","item","operation","htmlFor","onChange","placeholder","data-tip","name","handleConfirmationModal","color","cursor","disabled","modal","clickHandler","operator","currentDrawItem","grabDrawData","cancelHandler","removeDrawnDataAfterModalCancel","toggleModal","confirmation_modal","main","showModal","confirmationModal","grabCodeGeom","geomData","foundCode","find","element","selectedCodeData","currentDrawGeomFilter","removeDrawnDataWithoutCodeSelected","coordArr","coordinates","push","join","geomType","geomCoords","toString","lineStr","undefined","codeData","Login","changeHandler","handleSubmit","preventDefault","onLogin","onSubmit","src","img","alt","role","message","required","App","isAuth","background","loginData","json","token","today","Date","hours","getHours","expNumber","setHours","expirationDate","localStorage","setItem","rows","getGeom","history","handleBackground","Signup","SignupData","getItem","edate","removeItem","split","routes","path","render","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f6649b8a.chunk.js","sourcesContent":["export default {\r\n    REACT_APP_MAPBOX_API_TOKEN: process.env.REACT_APP_MAPBOX_API\r\n}","import React, { Component } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"./map.css\";\r\nimport config from \"../config\";\r\nimport * as turf from \"@turf/turf\";\r\nconst MapboxDraw = require(\"@mapbox/mapbox-gl-draw\");\r\nconst MapboxGeocoder = require(\"@mapbox/mapbox-gl-geocoder\");\r\nconst Parse = require(\"wellknown\");\r\n\r\nexport default class map extends Component {\r\n  state = {\r\n    codeGeom: {},\r\n    hasZoomed: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.buildMap();\r\n    // this.updateCodeGeom();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // console.log('inside did update')\r\n    this.updateCodeGeom();\r\n    if (this.props.zoomGeom) {\r\n      // console.log(\"inside did update\");\r\n      // todo: zoom to this.props.zoomGeom using parse here\r\n      if (this.props.numberClickZoom === false) {\r\n        this.props.hasZoomedNumberClickTrue()\r\n        let parseGeom = Parse(this.props.zoomGeom);\r\n        // console.log(parseGeom);\r\n        let parseBounds = turf.bbox(parseGeom);\r\n        window.map.fitBounds(parseBounds, { padding: 20 });\r\n      }\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps = (props, state) => {\r\n    // console.log(props);\r\n    // if (props.noCodeGeom) {\r\n    //   console.log(this)\r\n    // }\r\n    if (props.selectedData) {\r\n      return {\r\n        codeGeom: Parse(props.selectedData.geom),\r\n      };\r\n    }\r\n    // console.log(props);\r\n  };\r\n\r\n  updateCodeGeom = () => {\r\n    if (this.props.selectedData) {\r\n      // console.log('inside if')\r\n      // this.setState({\r\n      //   codeGeom: Parse(this.props.selectedData.geom),\r\n      // });\r\n      if (window.map.getLayer(\"membergeom\")) {\r\n        // console.log(this.props);\r\n        window.map.getSource(\"membergeom\").setData(this.state.codeGeom);\r\n      } else {\r\n        // console.log(\"inside else\");\r\n        window.map.addSource(\"membergeom\", {\r\n          type: \"geojson\",\r\n          data: this.state.codeGeom,\r\n          generateId: true,\r\n        });\r\n\r\n        window.map.addLayer({\r\n          id: \"membergeom\",\r\n          type: \"fill\",\r\n          source: \"membergeom\",\r\n          paint: {\r\n            \"fill-color\": \"fuchsia\",\r\n            \"fill-opacity\": 0.6,\r\n          },\r\n        });\r\n      }\r\n\r\n      // this.setState({hasZoomed: this.props.hasZoomed})\r\n      // console.log(this.props);\r\n      if (this.props.hasZoomedProp === false) {\r\n        // this.setState({hasZoomed: true})\r\n        this.props.hasZoomedTrue();\r\n        let bounds = turf.bbox(this.state.codeGeom);\r\n        window.map.fitBounds(bounds, { padding: 50 });\r\n      }\r\n    }\r\n  };\r\n\r\n  buildMap = (id) => {\r\n    // console.log(id);\r\n    mapboxgl.accessToken = config.REACT_APP_MAPBOX_API_TOKEN;\r\n    window.map = new mapboxgl.Map({\r\n      container: \"map\",\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n      center: [-81.276855, 33.596319],\r\n      zoom: 7,\r\n    });\r\n\r\n    // window.map.on('sourcedata', function() {\r\n    //   console.log('A sourcedata event occurred.');\r\n    //   });\r\n\r\n    const address = new MapboxGeocoder({\r\n      accessToken: config.REACT_APP_MAPBOX_API_TOKEN,\r\n      mapboxgl: mapboxgl,\r\n      countries: \"us\",\r\n      bbox: [-83.726807, 31.784217, -78.013916, 35.415915],\r\n    }).on(\"result\", function ({ result }) {\r\n      // fetchIntersect(result.geometry.coordinates, \"point\");\r\n    });\r\n    window.map.addControl(address);\r\n\r\n    const draw = new MapboxDraw({\r\n      displayControlsDefault: false,\r\n      controls: {\r\n        polygon: true,\r\n        line_string: true,\r\n        point: true,\r\n        trash:true\r\n      }\r\n    });\r\n    window.map.addControl(draw, \"bottom-right\");\r\n\r\n    window.map.on(\"draw.create\", (ev) => {\r\n      // console.log(ev)\r\n      let drawnGeom = { ...ev.features[0].geometry, id: ev.features[0].id };\r\n      this.props.selectedDrawItemHandler(drawnGeom);\r\n      draw.delete(this.props.noCodeGeom);\r\n    });\r\n\r\n    window.map.on(\"draw.delete\", (ev) => {\r\n      // console.log(ev)\r\n      this.props.deleteDrawData(ev.features[0].id);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props)\r\n    // console.log('rendered')\r\n    return <div id=\"map\"></div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./info_panel.css\";\r\nimport { FaInfoCircle } from \"react-icons/fa\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default class info_panel extends Component {\r\n  state = {\r\n    showInfoPanel: true,\r\n    codes: [],\r\n    selectedCode: \"\",\r\n    confirmation: false,\r\n    confirmationError: false,\r\n    buffer: \"\",\r\n    spinner: false,\r\n  };\r\n\r\n  togglePanel = () => {\r\n    this.setState({ showInfoPanel: !this.state.showInfoPanel });\r\n  };\r\n\r\n  codeHandler = (code) => {\r\n    // console.log(code)\r\n    this.setState({\r\n      selectedCode: code,\r\n    });\r\n    this.props.codeGeom(code);\r\n    this.props.hasZoomed();\r\n  };\r\n\r\n  handleGeomZoom = (id) => {\r\n    this.props.zoomToGeomNumberClick(id);\r\n    this.props.hasZoomedNumberClick();\r\n  };\r\n\r\n  handleConfirmation = (ev) => {\r\n    this.setState({ confirmation: ev.target.checked });\r\n    // console.log(ev.target.checked)\r\n  };\r\n\r\n  handleConfirmationButtonClick = () => {\r\n    if (this.state.confirmation && this.props.drawGeom.length >= 1) {\r\n      // console.log(\"button click\");\r\n      this.props.handleSpinner()\r\n      // console.log(this.state.buffer);\r\n      let drawObj = {\r\n        drawGeom: this.props.drawGeom,\r\n        buffer: this.state.buffer,\r\n      }\r\n      this.props.drawGeom.forEach((geom, index) => {\r\n        let converter = this.props.wktConverter(geom)\r\n        drawObj.drawGeom[index].string = converter\r\n      })\r\n      fetch(\"https://msauserver.sc811.com//submit\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify(drawObj),\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) {\r\n            throw new Error(res.status);\r\n          }\r\n          // return res.json();\r\n          // console.log(window.location.href)\r\n          // localStorage.clear()\r\n          window.location.reload(false)          \r\n        })\r\n        .catch((error) => this.setState({ error }));\r\n    } else {\r\n      this.setState({ confirmationError: true });\r\n      alert('please make an edit before submitting')\r\n    }\r\n  };\r\n\r\n  handleBuffer = (ev) => {\r\n    // console.log(ev.target.value);\r\n    this.setState({ buffer: ev.target.value });\r\n  };\r\n\r\n  // handleSpinner = () => {\r\n  //   console.log('spinning')\r\n  //   this.props.handleSpinner()\r\n  //   // this.setState({spinner: !this.state.spinner})\r\n  // }\r\n\r\n  render() {\r\n    // console.log(this.state)\r\n    return (\r\n      <div id=\"info_panel_cont\">\r\n        <div\r\n          className={\r\n            this.state.showInfoPanel\r\n              ? \"info_panel_content show\"\r\n              : \"info_panel_content blurry\"\r\n          }\r\n        >\r\n          <div className=\"header-background\">\r\n            <h1>MSAU Edit Tracking</h1>\r\n          </div>\r\n          <h2>Editable Codes</h2>\r\n          <hr />\r\n          {this.props.codes && this.props.codes[0] &&\r\n            this.props.codes[0].codes.map((x) => {\r\n              // console.log(x)\r\n              return (\r\n                <>\r\n                  <p onClick={() => this.codeHandler(x)} className=\"code-text\">\r\n                    {x}\r\n                  </p>\r\n                  {this.props.drawGeom\r\n                    .filter((item) => {\r\n                      // console.log(item, 'filter')\r\n                      return item.code === x;\r\n                    })\r\n                    .map((item, index) => {\r\n                      // console.log(item, \"map\");\r\n                      return (\r\n                        <p\r\n                          className={item.operation}\r\n                          onClick={() => this.handleGeomZoom(item)}\r\n                        >\r\n                          {index + 1}\r\n                        </p>\r\n                      );\r\n                    })}\r\n                </>\r\n              );\r\n            })}\r\n\r\n          <hr className=\"low-hr\" />\r\n\r\n          <form className=\"buffer-form\">\r\n            <label htmlFor=\"buffer\">Buffer Size (ft): </label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.handleBuffer}\r\n              className=\"input-text-buffer\"\r\n              placeholder=\"25\"\r\n            />\r\n            <div>\r\n              <div data-tip=\"Buffers are for points and lines. If you do not specify one, 25ft will be applied.\">\r\n                <ReactTooltip />\r\n                <FaInfoCircle />\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"confirmation-area\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"confirmation\"\r\n              value=\"confirmation\"\r\n              onChange={this.handleConfirmation}\r\n            />\r\n            <p>\r\n              I accept the SC811 MSAU{\" \"}\r\n              <span\r\n                onClick={this.props.handleConfirmationModal}\r\n                style={{ color: \"blue\", cursor: \"pointer\" }}\r\n              >\r\n                terms of service\r\n              </span>\r\n            </p>\r\n          </div>\r\n\r\n          <button\r\n            onClick={this.handleConfirmationButtonClick}\r\n            disabled={!this.state.confirmation}\r\n            className=\"submit-button\"\r\n            // className={this.state.confirmation ? \"submit-button-able\" : \"submit-button-disable\"}\r\n          >\r\n            Submit Edits\r\n          </button>\r\n        </div>\r\n        {/* <button\r\n          onClick={this.togglePanel}\r\n          className={\r\n            this.state.showInfoPanel\r\n              ? \"info_panel_toggle open\"\r\n              : \"info_panel_toggle close\"\r\n          }\r\n        >\r\n          {\">\"}\r\n        </button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./modal.css\";\r\nimport { FaWindowClose } from 'react-icons/fa'\r\n\r\nexport default class modal extends Component {\r\n  clickHandler = (operator) => {\r\n    // console.log(this.props);\r\n    let item = this.props.currentDrawItem;\r\n    item.operation = operator;\r\n    this.props.grabDrawData(item);\r\n  };\r\n\r\n  cancelHandler = () => {\r\n    // console.log(this.props);\r\n    this.props.removeDrawnDataAfterModalCancel();\r\n    this.props.toggleModal();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal-cont\">\r\n        {/* <p onClick={() => this.cancelHandler()} className=\"modal-cancel\">\r\n          \r\n        </p> */}\r\n        <div className=\"modal-content\">\r\n        <FaWindowClose className='x-button' onClick={() => this.cancelHandler()}/>\r\n          <p>Is this an addition or subtraction?</p>\r\n          <div className=\"button-container\">\r\n            <button\r\n              className=\"modal-button addition\"\r\n              onClick={() => this.clickHandler(\"addition\")}\r\n            >\r\n              Addition\r\n            </button>\r\n            <button\r\n              className=\"modal-button subtraction\"\r\n              onClick={() => this.clickHandler(\"subtraction\")}\r\n            >\r\n              Subtraction\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./confirmation_modal.css\";\r\n\r\nexport default class confirmation_modal extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"modal-text\">\r\n        <h3>SC811 MSAU Terms of Service</h3>\r\n        <p className=\"paragraph-text\">\r\n          You have requested access to the Member Service Area Updater (MSAU)\r\n          Application from South Carolina 811 (SC811). In order to use the MSAU\r\n          Application, you, must read the following and agree to be bound by the\r\n          following terms of use.\r\n        </p>\r\n        <p className=\"paragraph-text\">\r\n          THIS LICENSE AGREEMENT is a legal agreement between you, and the\r\n          company for which you work (collectively, the \"End-User\") and SC811, a\r\n          South Carolina corporation (\"SC811\"). As used in this Agreement,\r\n          \"Software\" means, collectively, the MSAU Application software and\r\n          systems, together with any and all enhancements, upgrades and updates\r\n          thereto that may be provided to End-User in the future by SC811.\r\n        </p>\r\n        <p className=\"paragraph-text\">\r\n          PLEASE READ THIS AGREEMENT CAREFULLY BEFORE USING THE SOFTWARE THAT\r\n          YOU HAVE LOGGED INTO. BY USING THE SOFTWARE YOU ARE ACCEPTING THE\r\n          TERMS OF THIS AGREEMENT AND USE OF THE SOFTWARE INDICATES YOUR\r\n          ACCEPTANCE OF THIS AGREEMENT AND ITS TERMS BY THE COMPANY FOR WHICH\r\n          YOU WORK. IF YOU, OR YOUR COMPANY, DO NOT AGREE TO THESE TERMS AND\r\n          CONDITIONS, YOU SHOULD REFRAIN FROM USING THE SOFTWARE. BY ACCEPTING\r\n          THIS AGREEMENT, YOU, CERTIFY THAT YOU HAVE THE AUTHORITY TO BIND\r\n          YOURSELF AND YOUR COMPANY TO THIS AGREEMENT.\r\n        </p>\r\n        {\"\\n\"}\r\n        <p className=\"paragraph-text\">\r\n          <ol>\r\n            <li>\r\n              <em>MSAU Application Ownership.</em> {\"\\n\"}\r\n              <p>\r\n                By this Agreement, SC811 is licensing its web-based software\r\n                application, known as \"Member Service Area Updater (MSAU)\r\n                Application\" on a limited license for use only on a web server\r\n                hosted and controlled by SC811. SC811 is at all times the owner\r\n                of the Software and retains all ownership rights in the\r\n                Software, including any updates, enhancements, modification,\r\n                revisions or additions thereto. SC811 is under no obligation to\r\n                End-User to provide End-User access or use of the Software and\r\n                nothing herein grants End-User any right, including right of\r\n                expectation, for use of such Software. SC811 shall be under no\r\n                obligation to provide updates, enhancements, modifications,\r\n                revisions or additions to the Software. If the Software is made\r\n                available for use to End-User, SC811 may provide the dedicated\r\n                servers needed for End-User's use of the Software. Rights not\r\n                specifically granted in this Agreement are expressly reserved by\r\n                SC811. Nothing in this Agreement shall be construed to confer\r\n                any rights to third party beneficiaries. End-User will never\r\n                receive a copy of the Software. SC811 will never release the\r\n                software code for the Software to End-User. The license granted\r\n                herein is entirely contingent upon SC811 hosting the Software\r\n                and never releasing any copies of the Software, which means that\r\n                End-User will never host the Software itself and may never\r\n                install the Software on any if its computers. In no event does\r\n                the license or this Agreement entitle End-User to any rights of\r\n                ownership in any of the work flow design, process flow design,\r\n                or the code in the underlying page, program, database, software,\r\n                or any other code used to draw or render the elements on the web\r\n                page, all of which is owned by SC811.\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <em>Grant of License.</em> {\"\\n\"}\r\n              <p>\r\n                SC811 grants End-User, and by End-User's use of the Software,\r\n                End-User accepts, pursuant and subject to the terms and\r\n                conditions of this Agreement, a limited, nonexclusive,\r\n                non-transferrable, non-assignable, revocable right to use the\r\n                Software (\"License\"), solely and strictly in accordance with the\r\n                terms, conditions and restrictions applicable to the License, as\r\n                described herein.\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <em>Term. </em> {\"\\n\"}\r\n              <p>\r\n                SC811 may, in its sole discretion, without prior notification\r\n                and without limiting its remedies or incurring any liability to\r\n                End-User, either temporarily disable or permanently discontinue\r\n                the furnishing of the Software to End-User in whole or in part.\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <em>End-User Responsibility</em> {\"\\n\"}\r\n              <p>\r\n                End-User shall not use or permit its end users to use the\r\n                Software in any way that violates laws, infringes the rights of\r\n                others, or interferes with SC811, and any entities from whom\r\n                SC811 obtains network or web services. End-User agrees\r\n                unconditionally to not cause harm to SC811 or third party\r\n                equipment, software, or processes used in connection with\r\n                furnishing the Software. Any breach of this provision may result\r\n                in civil and/or criminal penalties pursuant to applicable local,\r\n                state and federal law.\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <em>SC811's Rights.</em> {\"\\n\"}\r\n              <p>\r\n                End-User acknowledges and agrees that the Software and any and\r\n                all documentation (the \"Licensed Products\") are proprietary\r\n                products of SC811 under international copyright law. End-User\r\n                shall take all reasonable steps to safeguard the Licensed\r\n                Products. SC811 owns and retains all copyright, trademark, trade\r\n                secret and other proprietary rights in and to the Licensed\r\n                Products. Without the prior written consent of SC811, End-User\r\n                shall not modify or change the Software or reverse engineer,\r\n                decompile or disassemble the same.\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <em>Indemnity.</em> {\"\\n\"}\r\n              <p>\r\n                End-User shall indemnify and hold harmless SC811 from and\r\n                against any loss, cost, claim, liability, damage, or expense\r\n                (including reasonable attorneys' fees) to third parties,\r\n                relating to or arising from the use of the Software by End-User\r\n                or any of their personnel, whether or not End-User has knowledge\r\n                of or has authorized such access or use, including, without\r\n                limitation, claims for libel, slander, invasion of privacy,\r\n                infringement of copyright, patent infringement (where End-User\r\n                has used, connected, or combined the Software with the products\r\n                or services of others), negligence, or tortious behavior.\r\n                End-User agrees to indemnify SC811 and any entities from whom\r\n                SC811 obtains network services, third party software,\r\n                information or data and to hold SC811 and any such entities from\r\n                whom SC811 obtains network services, third party software,\r\n                information or data harmless from any claims resulting from the\r\n                use of the Software by End-User or End-User's end users that\r\n                causes damage to SC811 and any entities from whom SC811 obtains\r\n                network services, third party software, information or data or\r\n                that violates the law. As a condition of End-User’s use of the\r\n                Software End-User agrees to defend and indemnify SC811 and its\r\n                licensees from and against any damages, costs, liabilities,\r\n                settlement amounts and/or expenses (including, without\r\n                limitation, attorneys' fees and other dispute resolution\r\n                expenses) incurred in connection with any claim, lawsuit or\r\n                action by any third party that arises or results from End-User\r\n                or End-User’s use or misuse of the Software.\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <em>Disclaimers.</em> {\"\\n\"}\r\n              <p>\r\n                THE SOFTWARE IS LICENSED \"AS IS\". SC811 DISCLAIMS ANY AND ALL\r\n                WARRANTIES, WHETHER, EXPRESSED OR IMPLIED, INCLUDING, WITHOUT\r\n                LIMITATION, ANY WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A\r\n                PARTICULAR PURPOSE, OR AS TO THE QUALITY, UTILITY OR PERFORMANCE\r\n                OF THE SOFTWARE, ALL OF WHICH ARE HEREBY EXPRESSLY EXCLUDED.\r\n                SC811 MAKES NO WARRANTY THAT (i) THE SOFTWARE WILL MEET\r\n                END-USER'S REQUIREMENTS, (ii) THE SOFTWARE WILL BE\r\n                UNINTERRUPTED, TIMELY, SECURE, OR ERROR-FREE, (iii) THE RESULTS\r\n                THAT MAY BE OBTAINED FROM THE USE OF THE SOFTWARE WILL BE\r\n                ACCURATE OR RELIABLE, AND (iv) THE QUALITY OF ANY PRODUCTS,\r\n                SERVICES, INFORMATION, OR OTHER MATERIAL PURCHASED OR OBTAINED\r\n                BY END-USER THROUGH THE SOFTWARE WILL MEET END-USER'S\r\n                EXPECTATIONS. THE END-USER ASSUMES RESPONSIBILITY FOR SELECTING\r\n                THE SOFTWARE TO ACHIEVE ITS INTENDED RESULTS. NO ADVICE OR\r\n                INFORMATION, WHETHER ORAL OR WRITTEN, OBTAINED BY END-USER FROM\r\n                SC811 SHALL CREATE ANY WARRANTY NOT EXPRESSLY STATED IN THIS\r\n                AGREEMENT.\r\n              </p>\r\n              <p>\r\n                SC811 has no control over third party software, information or\r\n                data and all third party software, information or data is\r\n                provided to End-User on an \"as-is\" basis, with no warranties of\r\n                any kind. SC811, disclaims all warranties and conditions, either\r\n                express, implied, or statutory, including, but not limited to,\r\n                any (if any) non-infringement, or that the operation of any\r\n                third party software, information and data will be\r\n                uninterrupted, error-free or virus-free, except to the extent\r\n                that these disclaimers are held to be legally invalid.\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <em>Limiation of Liability.</em>\r\n              <p>\r\n                In no event shall SC811 be liable for any damages whatsoever,\r\n                including, but not limited to special, exemplary, punitive,\r\n                indirect, incidental or consequential damages, expenses, charges\r\n                or claims, including but not limited to loss of profits, loss of\r\n                business or business opportunity, loss of use, and etc., arising\r\n                out of the use or inability to use the Software, or for any\r\n                claim by any entity not a party to this Agreement. SC811 shall\r\n                have no liability with respect to any obligations or liabilities\r\n                arising from the terms and conditions of this Agreement for\r\n                special, exemplary, punitive, indirect, incidental or\r\n                consequential damages, expenses, charges or claims, even if it\r\n                has been advised of the possibility of such damages, expenses,\r\n                charges or claims.\r\n              </p>\r\n              <p>\r\n                SC811 shall have no liability with respect to any third party\r\n                software and SC811 does not guarantee the accuracy of any of the\r\n                information contained therein, including, but not limited to,\r\n                database information, geographic information systems\r\n                information, geo-spatial information and document images. SC811\r\n                shall have no liability for any damages incurred, whether\r\n                directly, indirectly, incidental, punitive or consequential, as\r\n                a result of any errors, omissions or discrepancies in any\r\n                information provided through third party software, including,\r\n                but not limited to mapping software.\r\n              </p>\r\n              <p>\r\n                The End-User agrees that the liability of SC811 for actual\r\n                proven damages, expenses, charges or claims for any cause\r\n                whatsoever, including but not limited to liability arising out\r\n                of contract, tort, including, but not limited to negligence and\r\n                strict liability, or for breach of warranty or otherwise, shall\r\n                be the \"Liability Limitation Amount\" as defined herein. The\r\n                Liability Limitation Amount shall be the lesser of (i) the\r\n                actually proven damages, expenses, charges or claims; or (ii)\r\n                the amount the End-User paid to SC811 for the Software license.\r\n              </p>\r\n            </li>\r\n            <li>\r\n              <em>General Provisions.</em> {'\\n'}\r\n              <ol>\r\n                <li>\r\n                  <em>Arbitration.</em>\r\n                  <p>\r\n                    Any controversy or claim arising out of this Agreement or\r\n                    the use of the Software shall be settled by Arbitration. No\r\n                    arbitration or other action under this Agreement, may be\r\n                    brought by either party against the other party, more than\r\n                    one (1) year after the cause of action arises. Any\r\n                    unresolved disputes concerning this Agreement shall be\r\n                    submitted to arbitration before a single arbitrator in\r\n                    Minneapolis, Minnesota and the arbitration shall be\r\n                    conducted under the rules then prevailing of the American\r\n                    Arbitration Association. The arbitrator may award attorney's\r\n                    fees and expenses as part of his award. The award of the\r\n                    arbitrator shall be binding and may be entered as a judgment\r\n                    in any court of competent jurisdiction.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <em>Force Majeure.</em>\r\n                  <p>\r\n                    SC811's performance under this agreement shall be excused\r\n                    for any reason, including, but not limited to: labor\r\n                    difficulties, governmental orders, civil commotions, acts of\r\n                    god, or other conditions or circumstances beyond SC811's\r\n                    reasonable control. SC811 shall not be liable for\r\n                    interruptions caused by failure of equipment or services,\r\n                    failure of communications, power outages, or other\r\n                    interruptions not within the complete control of SC811.\r\n                    SC811 shall not be liable for performance deficiencies\r\n                    caused or created by End-User's equipment. SC811 shall not\r\n                    be liable if changes in operation, procedures, or services\r\n                    require modification or alteration of End-User's, or\r\n                    End-User's users' equipment, render the same obsolete or\r\n                    otherwise affect its performance.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <em>Successors and Assigns.</em>\r\n                  <p>\r\n                    This Agreement shall be binding upon and inure to the\r\n                    benefit of the parties hereto and their assigns, legal\r\n                    representatives, heirs or successors provided that End-User\r\n                    shall not assign any right or obligation hereunder in whole\r\n                    or in part, without the prior written consent of the SC811\r\n                    hereto, and any attempt to do so shall be void.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <em>Severable Provisions.</em>\r\n                  <p>\r\n                    Each provision of this Agreement is intended to be\r\n                    severable. If any provision hereof is illegal or invalid for\r\n                    any reason whatsoever, such illegality or invalidity shall\r\n                    not affect the validity of the remainder of this Agreement.\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <em>Governing Law.</em>\r\n                  <p>\r\n                    This Agreement shall be construed and enforced in accordance\r\n                    with the laws of the State of South Carolina.\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n            </li>\r\n          </ol>\r\n        </p>\r\n        <div className=\"close-button\">\r\n          <button onClick={this.props.handleConfirmationModal}>Close</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Map from \"../map/map\";\r\nimport InfoPanel from \"../infoPanel/info_panel\";\r\nimport Modal from \"../modal/modal\";\r\nimport ConfirmationModal from \"../confirmation_modal/confirmation_modal\";\r\nimport \"./main.css\";\r\n\r\nexport default class main extends Component {\r\n  state = {\r\n    selectedCode: \"\",\r\n    showModal: false,\r\n    drawGeom: [],\r\n    currentDrawItem: {},\r\n    noCodeGeom: \"\",\r\n    hasZoomed: false,\r\n    zoomGeom: \"\",\r\n    numberClickZoom: false,\r\n    confirmationModal: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // call grabCodeGeom\r\n    // console.log(this.props);\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    // console.log(props);\r\n    return {\r\n      codeData: props.geomData,\r\n    };\r\n  }\r\n\r\n  grabCodeGeom = (code) => {\r\n    if (this.props.geomData.length > 0) {\r\n      // console.log(this.props.geomData)\r\n      let foundCode = this.props.geomData.find(\r\n        (element) => element.codes === code\r\n      );\r\n      // console.log(foundCode)\r\n      this.setState({\r\n        selectedCodeData: foundCode,\r\n      });\r\n    }\r\n  };\r\n\r\n  hasZoomed = () => {\r\n    this.setState({ hasZoomed: false });\r\n  };\r\n\r\n  hasZoomedTrue = () => {\r\n    this.setState({ hasZoomed: true });\r\n  };\r\n\r\n  hasZoomedNumberClick = () => {\r\n    this.setState({ numberClickZoom: false });\r\n  };\r\n\r\n  hasZoomedNumberClickTrue = () => {\r\n    this.setState({ numberClickZoom: true });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    if (this.state.showModal === true) {\r\n      this.removeDrawnDataAfterModalCancel(this.state.currentDrawItem.id);\r\n    }\r\n    this.setState({ showModal: !this.state.showModal });\r\n  };\r\n\r\n  grabDrawData = (geom) => {\r\n    //   popup modal\r\n    //   grab data once drawn\r\n    this.setState({\r\n      drawGeom: [...this.state.drawGeom, geom],\r\n      showModal: false,\r\n    });\r\n  };\r\n\r\n  deleteDrawData = (id) => {\r\n    //   popup modal\r\n    //   grab data once drawn\r\n    // console.log(id);\r\n    const currentDrawGeom = this.state.drawGeom;\r\n    const currentDrawGeomFilter = currentDrawGeom.filter((x) => x.id !== id);\r\n    this.setState({ drawGeom: currentDrawGeomFilter });\r\n  };\r\n\r\n  removeDrawnDataWithoutCodeSelected = (id) => {\r\n    // console.log(id);\r\n    this.setState({ noCodeGeom: id });\r\n  };\r\n\r\n  removeDrawnDataAfterModalCancel = (id) => {\r\n    this.setState({ noCodeGeom: id });\r\n  };\r\n\r\n  wktConverter = (id) => {\r\n    let string;\r\n    if (id.type === \"Polygon\") {\r\n      let coordArr = [];\r\n      id.coordinates[0].forEach((element) => {\r\n        coordArr.push(element.join(\" \"));\r\n      });\r\n      let geomType = id.type;\r\n      let geomCoords = coordArr.toString();\r\n      string = `${geomType} ((${geomCoords}))`;\r\n    } else if (id.type === \"Point\") {\r\n      string = `${id.type}(${id.coordinates[0]} ${id.coordinates[1]})`;\r\n    } else if (id.type === \"LineString\") {\r\n      let coordArr = [];\r\n      id.coordinates.forEach((element) => {\r\n        coordArr.push(element.join(\" \"));\r\n      });\r\n      let geomType = id.type;\r\n      let geomCoords = coordArr.toString();\r\n      string = `${geomType} (${geomCoords})`;\r\n    }\r\n    return string;\r\n  };\r\n\r\n  zoomToGeomNumberClick = (id) => {\r\n    // console.log(id);\r\n    let lineStr = this.wktConverter(id);\r\n    this.setState({ zoomGeom: lineStr });\r\n  };\r\n\r\n  selectedDrawItemHandler = (item) => {\r\n    if (this.state.selectedCodeData === undefined) {\r\n      alert(\"Please select a code to edit.\");\r\n      //   console.log(item.id);\r\n      //   tconst currentDrawGeom = this.state.drawGeom;\r\n      this.removeDrawnDataWithoutCodeSelected(item.id);\r\n    } else {\r\n      item.code = this.state.selectedCodeData.codes;\r\n      //   console.log(item, this.state.selectedCode);\r\n      this.toggleModal(item);\r\n      this.setState({ currentDrawItem: item });\r\n    }\r\n  };\r\n\r\n  handleConfirmationModal = () => {\r\n    this.setState({ confirmationModal: !this.state.confirmationModal });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    return (\r\n      <div id=\"main_cont\">\r\n        <InfoPanel\r\n          codeGeom={this.grabCodeGeom}\r\n          codes={this.props.codes}\r\n          drawGeom={this.state.drawGeom}\r\n          hasZoomed={this.hasZoomed}\r\n          zoomToGeomNumberClick={this.zoomToGeomNumberClick}\r\n          hasZoomedNumberClick={this.hasZoomedNumberClick}\r\n          handleConfirmationModal={this.handleConfirmationModal}\r\n          wktConverter={this.wktConverter}\r\n          handleSpinner={this.props.handleSpinner}\r\n        />\r\n        <Map\r\n          codes={this.props.codes}\r\n          selectedData={this.state.selectedCodeData}\r\n          toggleModal={this.toggleModal}\r\n          deleteDrawData={this.deleteDrawData}\r\n          selectedDrawItemHandler={this.selectedDrawItemHandler}\r\n          noCodeGeom={this.state.noCodeGeom}\r\n          drawGeom={this.state.drawGeom}\r\n          hasZoomedProp={this.state.hasZoomed}\r\n          hasZoomedTrue={this.hasZoomedTrue}\r\n          zoomGeom={this.state.zoomGeom}\r\n          numberClickZoom={this.state.numberClickZoom}\r\n          hasZoomedNumberClick={this.hasZoomedNumberClick}\r\n          hasZoomedNumberClickTrue={this.hasZoomedNumberClickTrue}\r\n        />\r\n        {this.state.showModal ? (\r\n          <Modal\r\n            toggleModal={this.toggleModal}\r\n            deleteDrawData={this.deleteDrawData}\r\n            grabDrawData={this.grabDrawData}\r\n            currentDrawItem={this.state.currentDrawItem}\r\n            removeDrawnDataAfterModalCancel={\r\n              this.removeDrawnDataAfterModalCancel\r\n            }\r\n          />\r\n        ) : null}\r\n\r\n        {this.state.confirmationModal ? (\r\n          <ConfirmationModal\r\n            handleConfirmationModal={this.handleConfirmationModal}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport img from \"../images/SC811.png\";\r\nimport \"./Login.css\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    error: null,\r\n  };\r\n\r\n  changeHandler = (ev) => {\r\n    this.setState({\r\n      [ev.target.name]: ev.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (ev) => {\r\n    ev.preventDefault()\r\n    this.props.onLogin(this.state)\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    return (\r\n      <div className=\"login-page\">\r\n        <div className=\"form-container\">\r\n          <form className=\"login-form\" onSubmit={this.handleSubmit}>\r\n            <img src={img} alt=\"SC811 logo\" className=\"logo\" />\r\n            <h2>MSAU Application</h2>\r\n            <p>(Member Service Area Updater)</p>\r\n            <div className=\"login_error\" role=\"alert\">\r\n              {error && <p>{error.message}</p>}\r\n            </div>\r\n            <div className=\"uname\">\r\n              <label htmlFor=\"username\"></label>\r\n              <input type=\"text\" name=\"username\" id=\"username\" placeholder='username' required onChange={this.changeHandler} />\r\n            </div>\r\n            <div className=\"pw\">\r\n              <label htmlFor=\"password\"></label>\r\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder='password' required onChange={this.changeHandler} />\r\n            </div>\r\n            <input type=\"submit\" value=\"Sign In\" className=\"signin-button\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react'\nimport Main from './main/main'\nimport Login from './login/Login'\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n\n  state = {\n    isAuth: false,\n    // once in state pass as prop to main\n    codes: [],\n    spinner: false,\n    background: false,\n  }\n\n  componentDidMount() {\n    let token = window.localStorage.getItem('token')\n    if (!token) {\n      return\n    }\n    let edate = window.localStorage.edate\n    if (new Date(edate) <= new Date()) {\n      window.localStorage.removeItem('token')\n      window.localStorage.removeItem('codes')\n      window.localStorage.removeItem('edate')\n    } else {\n      let codes = window.localStorage.getItem('codes')\n      codes = [{codes:codes.split(' ')}]\n      this.setState({isAuth: true, codes: codes})\n      this.getGeom({token})\n    }\n  }\n\n  Login = (loginData) => {\n    fetch(\"https://msauserver.sc811.com//login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify(loginData),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.status);\n        }\n        return res.json();\n      })\n      .then((data) => {\n        // console.log(data)\n        if (data.token) {\n          // todo set expiration date in local storage as well\n          let today = new Date()\n          let hours = today.getHours() + 1\n          let expNumber = today.setHours(hours)\n          let expirationDate = new Date(expNumber)\n          window.localStorage.setItem('edate', expirationDate)\n          window.localStorage.setItem('token', data.token)\n          window.localStorage.setItem('codes',data.codes.rows[0].codes.join(' '))\n          this.setState({\n            isAuth: true,\n            // insert codes into state\n            codes: data.codes.rows\n          })\n          this.getGeom(loginData)\n          this.props.history.push('/')\n        }\n      })\n      .catch((error) => this.setState({ error }));\n  }\n\n  getGeom = (loginData) => {\n    this.handleSpinner();\n    fetch(\"https://msauserver.sc811.com//code\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify(loginData),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.status);\n        }\n        return res.json();\n      })\n      .then((data) => {\n        // console.log(data)\n        this.setState({\n          geomData: data.rows\n        })\n        // console.log(data)\n        this.handleSpinner();\n      })\n      .catch((error) => this.setState({ error }));\n  }\n\n  handleSpinner = () => {\n    // console.log(\"spinning\");\n    this.setState({spinner: !this.state.spinner})\n  };\n\n  handleBackground = () => {\n    this.setState({background: !this.state.background})\n  }\n\n  Signup = (SignupData) => {\n    fetch(\"https://msauserver.sc811.com//signup\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify(SignupData),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.status);\n        }\n        return res.json();\n      })\n      .then(() => {\n        this.Login(SignupData)\n      })\n      .catch((error) => this.setState({ error }));\n  }\n\n  render() {\n    // protected routes\n    // console.log(this.state.isAuth)\n    let routes = (\n      <Switch>\n        <Route path='/' render={() => (<Login onLogin={this.Login}/>)}>\n        </Route>\n      </Switch>\n    )\n    if (this.state.isAuth) {\n      routes = (\n        <Switch>\n          {/* change component to render like above and pass the state codes to main */}\n          <Route path='/' render={() => (<Main geomData={this.state.geomData} codes={this.state.codes} spinner={this.state.spinner} handleSpinner={this.handleSpinner}/>)} ></Route>\n        </Switch>\n      ) \n    }\n    return (\n      <div>\n        {this.state.spinner ? (<div className='spinner-background'>\n          <div className='spinner'></div>\n        </div>\n        ) : ''\n        }\n        {routes}\n      </div>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/SC811.85a5fec5.png\";"],"sourceRoot":""}